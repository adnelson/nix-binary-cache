-- This cabal file is generated by a nix expression (see project.nix).
-- It is not meant to be modified by hand.
name:                nix-binary-cache
version:             0.0.1
license:             MIT
license-file:        LICENSE
author:              Allen Nelson
maintainer:          ithinkican@gmail.com
build-type:          Simple
cabal-version:       >=1.10
data-files:            sql/tables.sql

-- Define the executable
executable nix-client
  main-is:             Nix/Cache/Client/Main.hs
  build-depends:       aeson, attoparsec, base, bytestring, base64-bytestring, classy-prelude, directory, http-client, http-client-openssl, http-client-tls, http-media, http-types, mtl, parsec, pcre-heavy, process, servant-client, servant-server, servant, text, transformers, unordered-containers, vector, wai, wai-extra, warp
  hs-source-dirs:      src
  default-language:    Haskell2010
  default-extensions:  ConstraintKinds, CPP, DataKinds, DeriveGeneric, FlexibleContexts, FlexibleInstances, GADTs, GeneralizedNewtypeDeriving, LambdaCase, MultiParamTypeClasses, NoImplicitPrelude, OverloadedStrings, QuasiQuotes, RecordWildCards, ScopedTypeVariables, TypeFamilies, TypeOperators, TypeSynonymInstances, ViewPatterns
  ghc-options:         -O3 -Wall -fwarn-tabs -fno-warn-unused-do-bind -fno-warn-name-shadowing -threaded -rtsopts -with-rtsopts=-N -O3 -Werror



-- Define a unit test suite
test-suite unit-tests
  type:                exitcode-stdio-1.0
  hs-source-dirs:      src, tests
  main-is:             Unit.hs
  build-depends:       aeson, attoparsec, base, bytestring, base64-bytestring, classy-prelude, directory, http-client, http-client-openssl, http-client-tls, http-media, http-types, mtl, parsec, pcre-heavy, process, servant-client, servant-server, servant, text, transformers, unordered-containers, vector, wai, wai-extra, warp, QuickCheck, hspec
  ghc-options:         -Wall -fwarn-tabs -fno-warn-unused-do-bind -fno-warn-name-shadowing -threaded -rtsopts -with-rtsopts=-N -fno-warn-orphans
  cpp-options:         -DUNIT_TESTS 
  default-language:    Haskell2010
  default-extensions:  ConstraintKinds, CPP, DataKinds, DeriveGeneric, FlexibleContexts, FlexibleInstances, GADTs, GeneralizedNewtypeDeriving, LambdaCase, MultiParamTypeClasses, NoImplicitPrelude, OverloadedStrings, QuasiQuotes, RecordWildCards, ScopedTypeVariables, TypeFamilies, TypeOperators, TypeSynonymInstances, ViewPatterns
